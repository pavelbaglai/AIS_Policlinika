@model DigitalMedicine.Models.Users.Doctor
@using DigitalMedicine.Models

@{
    ViewBag.Title = "Регистрация врача";
}

<h2>Регистрация врача</h2>

@using (Html.BeginForm("AddDoctor", "ClinicAdmin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />

        <div class="row">
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-2">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.Patronymic, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Patronymic, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Patronymic, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <hr />

        <div class="form-group col-md-5">
            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control", placeholder = "Выберите дату" } })
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-5">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "name@example.com" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-5">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label" })
            <div>
                <input type="file" class="form-control-file" id="photo" name="photo" accept="image/jpeg" required />
            </div>
        </div>

        <div class="form-group col-md-5">
            @Html.LabelFor(model => model.Information, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Information, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Information, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <p class="h4">Специальность</p>
        <p> Для множественного выбора зажимайте <span class="badge badge-primary">CTRL</span></p>
        <div id="specialities">
            <select style="height:200px" class="form-control col-3" name="SpecialityList" id="SpecialityList" multiple required>
                @{
                    DataBaseContext context = new DataBaseContext();
                    foreach (var speciality in context.DoctorSpecialities.OrderBy(s => s.Name))
                    {
                        <option value="@speciality.Id">@speciality.Name</option>
                    }
                }
            </select>
        </div>
        @*<input type="button" id="addSpeciality" class="rounded-circle btn btn-outline-success" value="+"/>*@
        <hr />
        <p class="h4">График работы</p>
        <br />
        <div>
            <table>
                <tr class="text-center">
                    <td>@Html.LabelFor(model => model.WorkTime.Monday, new { htmlAttributes = new { @class = "form-control" } })</td>
                    <td>@Html.LabelFor(model => model.WorkTime.Tuesday, new { htmlAttributes = new { @class = "form-control" } })</td>
                    <td>@Html.LabelFor(model => model.WorkTime.Wednesday, new { htmlAttributes = new { @class = "form-control" } })</td>
                    <td>@Html.LabelFor(model => model.WorkTime.Thursday, new { htmlAttributes = new { @class = "form-control" } })</td>
                    <td>@Html.LabelFor(model => model.WorkTime.Friday, new { htmlAttributes = new { @class = "form-control" } })</td>
                    <td>@Html.LabelFor(model => model.WorkTime.Saturday, new { htmlAttributes = new { @class = "form-control" } })</td>
                    <td>@Html.LabelFor(model => model.WorkTime.Sunday, new { htmlAttributes = new { @class = "form-control" } })</td>

                </tr>
                <tr>
                    <td>@Html.EditorFor(model => model.WorkTime.Monday, new { htmlAttributes = new { @class = "form-control", placeholder = "XX:XX-XX:XX" } })</td>
                    <td>@Html.EditorFor(model => model.WorkTime.Tuesday, new { htmlAttributes = new { @class = "form-control" } })</td>
                    <td>@Html.EditorFor(model => model.WorkTime.Wednesday, new { htmlAttributes = new { @class = "form-control" } })</td>
                    <td>@Html.EditorFor(model => model.WorkTime.Thursday, new { htmlAttributes = new { @class = "form-control" } })</td>
                    <td>@Html.EditorFor(model => model.WorkTime.Friday, new { htmlAttributes = new { @class = "form-control" } })</td>
                    <td>@Html.EditorFor(model => model.WorkTime.Saturday, new { htmlAttributes = new { @class = "form-control" } })</td>
                    <td>@Html.EditorFor(model => model.WorkTime.Sunday, new { htmlAttributes = new { @class = "form-control" } })</td>
                </tr>
            </table>
            <p>@Html.ValidationMessageFor(model => model.WorkTime.Monday, "", new { @class = "text-danger" })</p>
            <p>@Html.ValidationMessageFor(model => model.WorkTime.Tuesday, "", new { @class = "text-danger" })</p>
            <p>@Html.ValidationMessageFor(model => model.WorkTime.Wednesday, "", new { @class = "text-danger" })</p>
            <p>@Html.ValidationMessageFor(model => model.WorkTime.Thursday, "", new { @class = "text-danger" })</p>
            <p>@Html.ValidationMessageFor(model => model.WorkTime.Friday, "", new { @class = "text-danger" })</p>
            <p>@Html.ValidationMessageFor(model => model.WorkTime.Saturday, "", new { @class = "text-danger" })</p>
            <p>@Html.ValidationMessageFor(model => model.WorkTime.Sunday, "", new { @class = "text-danger" })</p>
        </div>
        <hr />
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.ReceptionTime, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.TextBox("receptionTime", "", new { @class = "form-control", required = "required", placeholder = "Время в минутах" })
                    @Html.ValidationMessageFor(model => model.ReceptionTime, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-5">
                @Html.LabelFor(model => model.RotationTime, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.TextBox("rotationTime", "", new { @class = "form-control", required = "required", placeholder = "Время в минутах" })
                    @Html.ValidationMessageFor(model => model.RotationTime, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <hr />
        <div class="form-group col-md-5">
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <input type="hidden" id="IdRole" name="IdRole" value="@ViewBag.idRole" />

        <input type="hidden" id="IdClinic" name="IdClinic" value="@ViewBag.idClinic" />

        <div class="form-group col-md-6">
            <input type="submit" value="Зарегестрировать" class="btn btn-outline-primary" />
            <a class="btn btn-outline-danger" href="@Url.Action("Index","Cabinet")">В кабинет</a>
        </div>
    </div>
 }


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $("#Birthday").flatpickr({
        minDate: new Date(1900, 1, 1),
        maxDate: new Date()
    });

    var idSpeciality = 0;   //кол-во специальностей доктора
    $("#addSpeciality").click(function () {
        var listSpeciality = $("#Specialities0").clone();
        listSpeciality.attr("id", "Specialities" + (++idSpeciality));
        listSpeciality.attr("name", "Specialities[" + idSpeciality + "].Id");
        listSpeciality.appendTo("#specialities");
    });

</script>

