@model DigitalMedicine.Models.Users.User

@{
    ViewBag.Title = ViewBag.Message;
}

<h2>@ViewBag.Message</h2>


@using (Html.BeginForm("Registration", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-2">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.Patronymic, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Patronymic, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Patronymic, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <hr />
        <div class="form-group col-md-5">
            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control", placeholder = "Выберите дату" } })
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-5">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "name@example.com" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-5">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label" })
            <div>
                <input type="file" class="form-control-file" id="photo" name="photo" accept="image/jpeg" required/>
            </div>
        </div>
        <hr />
        <div class="form-group col-md-5">
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-5">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <input type="hidden" id="ConfirmedEmail" name="ConfirmedEmail" value="false" />
        <input type="hidden" id="IdRole" name="IdRole" value="@ViewBag.IdRole" />
        <hr />
        <div class="form-group col-md-6">
            <input type="submit" value="Зарегестрироваться" class="btn btn-outline-primary" />
            <a class="btn btn-outline-danger" href="@Url.Action("Index","Home")">На главную</a>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $("#Birthday").flatpickr({
        minDate: new Date(1900, 1, 1),
        maxDate: new Date()
    });
</script>